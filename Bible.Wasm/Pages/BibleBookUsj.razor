@page "/{Language=eng}/{BibleVersion=WEBBE}/{BookCode=3JN}/{ChapterNumber:int?}"
@using Bible.Backend.Services
@using Bible.Data
@using Bible.Usx.Models
@using Bible.Usx.Services
@using Bible.Wasm.Shared.Usj
@using Unihan.Models
@using Unihan.Services
@inject UsjBookService UsjBookService

@if (UsjBook == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="d-flex align-items-center mb-3" style="gap:12px;">
        <MudCheckBox T="bool"
            Disabled="_isEnriching"
            Label="Show Anglicised Pronunciation (ruby text)"
            ValueChanged="@OnPronunciationToggled" />
        @if (_isEnriching)
        {
            <MudProgressCircular StrokeWidth="20" Color="Color.Primary" Indeterminate="true" />
        }
    </div>

    <UsjRenderer Node="@UsjBook" Ruby="@Ruby" />
}

@code {
    [Parameter, EditorRequired]
    public string? Language { get; set; }

    [Parameter, EditorRequired]
    public string? BibleVersion { get; set; }

    [Parameter, EditorRequired]
    public string? BookCode { get; set; }

    [Parameter]
    public int? ChapterNumber { get; set; } = 1;

    private bool _isEnriching = false;
    private bool _isChecked = false;
    private UnihanField? _unihanType;
    private UnihanField? Ruby;
    private UsjBook? UsjBook;

    protected override async Task OnParametersSetAsync()
    {
        var unihanLanguage = new UnihanLanguage(Language);
        _unihanType = unihanLanguage.Field;
        UsjBook = await UsjBookService.GetBookAsync(Language, BibleVersion, BookCode);
    }

    private async Task OnPronunciationToggled(bool isChecked)
    {
        await Task.CompletedTask;
        _isChecked = isChecked;
        if (UsjBook is null || _isEnriching) return;
        if (!_unihanType.HasValue) _unihanType = UnihanField.Unknown;
        Ruby = _isChecked ? _unihanType : null;
    }
}